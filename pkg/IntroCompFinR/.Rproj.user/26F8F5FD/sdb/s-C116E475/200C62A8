{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Introduction to Portfolio Theory\"\nauthor: \"Eric Zivot\"\ndate: \"Wednesday, February 24, 2016\"\noutput: slidy_presentation\n---\n\n## Set options and load packages\n\n```{r}\noptions(digits=3, width=70)\nlibrary(IntroCompFinR)\nlibrary(PerformanceAnalytics)\n```\n\n## 2 asset example\n\nHypothetical asset return data. Asset A (Amazon) is a high return and high risk asset. Asset B (Boeing) is a low return and low risk asset. Data is calibrated to reflect a yearly investment horizon.\n\n```{r}\nmu.A = 0.175\nsig.A = 0.258\nsig2.A = sig.A^2\nmu.B = 0.055\nsig.B = 0.115\nsig2.B = sig.B^2\nrho.AB = -0.164\nsig.AB = rho.AB*sig.A*sig.B\n\n```\n\n## Example portfolio 1: long only\n\n```{r}\nx.A = 0.5\nx.B = 0.5\nmu.p1 = x.A*mu.A + x.B*mu.B\nsig2.p1 = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p1 = sqrt(sig2.p1)\nmu.p1\nsig2.p1\nsig.p1\n```\n\nPortfolio mean return is half-way between asset mean returns, but portfolio volatility is less than half-way between asset volatilities. \n\n## Example portfolio 2: long-short\n\nHere, a short sale is selling an asset you don't own (a type of leverage) and taking the proceeds and buying more of the other asset. The short-sold asset has a negative weight, and the other asset has a weight greater than one. \n\n\n```{r}\nx.A = 1.5\nx.B = -0.5\nmu.p2 = x.A*mu.A + x.B*mu.B\nsig2.p2 = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p2 = sqrt(sig2.p2)\nmu.p2\nsig2.p2\nsig.p2\n\n```\n\nNotice that short selling (leverage) greatly increases the risk of the portfolio.\n\n## Risk return characteristics of portfolios\n\n```{r, echo=FALSE}\nsigma.vals = c(sig.A, sig.B, sig.p1, sig.p2)\nmu.vals = c(mu.A, mu.B, mu.p1, mu.p2)\nnames(sigma.vals) = names(mu.vals) = c(\"A\", \"B\", \"P1\", \"P2\")\nplot(sigma.vals, mu.vals, \n     xlab=expression(sigma[p]), ylab=expression(mu[p]), cex.lab=2,\n     xlim = c(0, 0.40), ylim = c(0, 0.30),\n     pch=16, col=\"blue\", cex=2)\ntext(sigma.vals, mu.vals, labels=names(mu.vals), pos=2)\nslope = (mu.A - mu.B)/(sig.A - sig.B)\nintercept = mu.A - slope*sig.A\nabline(a=intercept, b=slope, lwd=2, lty=\"dotted\")\n\n```\n\n\n## Asset and portfolio VaR\n\n```{r}\n# equally weighted portfolio\nx.A = 0.5\nx.B = 0.5\nmu.p1 = x.A*mu.A + x.B*mu.B\nsig2.p1 = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p1 = sqrt(sig2.p1)\n```\n\n```{r}\n# Asset VaR\nw0 = 100000\nVaR.A = (mu.A + sig.A*qnorm(0.05))*w0\nVaR.A\nVaR.B = (mu.B + sig.B*qnorm(0.05))*w0\nVaR.B\n```\n\n```{r}\n# portfolio VaR\nVaR.p1 = (mu.p1 + sig.p1*qnorm(0.05))*w0\nVaR.p1\n# note: portfolio VaR is not a weighted average of individual asset VaR\nx.A*VaR.A + x.B*VaR.B\n```\n\n## Create portfolio frontier\n\n```{r, echo=FALSE}\n# minimum variance portfolio for plot\nxA.min = (sig2.B - sig.AB)/(sig2.A + sig2.B - 2*sig.AB)\nxB.min = 1 - xA.min\nmu.p.min = xA.min*mu.A + xB.min*mu.B\nsig2.p.min = xA.min^2 * sig2.A + xB.min^2 * sig2.B + 2*xA.min*xB.min*sig.AB\nsig.p.min = sqrt(sig2.p.min)\n```\n\n```{r}\n# create portfolios for frontier plot\nx.A = seq(from=-0.4, to=1.4, by=0.1)\nx.B = 1 - x.A\nmu.p = x.A*mu.A + x.B*mu.B\nsig2.p = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p = sqrt(sig2.p)\n```\n\n## Plot portfolio frontier\n\n```{r}\n# plot portfolio frontier\ncex.val = 2\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]), cex.lab=cex.val,\n     col=c(rep(\"red\", 6), \"blue\", rep(\"green\", 12)))\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\ntext(x=sig.p.min, y=mu.p.min, labels=\"Global min\", pos=2, cex = cex.val)\n```\n\n* Portfolio frontier is one side of a hyperbole\n* Portfolio frontier is often called the \"Markowitz bullet\"\n* Long only portfolios are between asset A and asset B\n* Long-short portfolios are to the right of asset A and to the right of asset B\n* Shape of frontier depends crucially $\\rho_{AB}$\n\n## Portfolio frontier as a function of $\\rho_{AB}$\n\n```{r, echo=FALSE}\nrho.AB.vals = c(-0.9,-0.5, -0.25, 0, 0.25, 0.5, 0.9)\nx.A = seq(from=-0.4, to=1.4, by=0.1)\nx.B = 1 - x.A\nmu.p = x.A*mu.A + x.B*mu.B\nsig2.p = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*rho.AB.vals[1]*sig.A*sig.B\nsig.p = sqrt(sig2.p)\n\n# create portfolio plot\ncex.val = 1.5\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     cex.lab = cex.val, col=1)\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\n\nfor (i in 2:length(rho.AB.vals)) {\n  sig2.p = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*rho.AB.vals[i]*sig.A*sig.B\n  sig.p = sqrt(sig2.p)\n  points(sig.p, mu.p, type=\"b\", pch=16, col=i, cex=cex.val)\n}\nlegend(x=\"bottomright\", legend=paste(\"rho\", as.character(rho.AB.vals), sep=\"=\"), \n       col=1:length(rho.AB.vals), lty=1, pch=16, cex = cex.val)\n```\n\n* Portfolio frontier is almost linear as $\\rho_{AB}$ approaches 1\n* Portfolio frontier stretches to the y-axis as $\\rho_{AB}$ approaches -1\n   + When $\\rho_{AB}=-1$ there exists a portfolio with zero volatility (no risk)\n\n## Portfolio Frontier when $\\rho_{AB}=+/-1$\n\n```{r, echo=FALSE}\nrho.AB = 1\nsig.AB = rho.AB*sig.A*sig.B\nmu.p.1 = x.A*mu.A + x.B*mu.B\nsig2.p.1 = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p.1 = sqrt(sig2.p.1)\nrho.AB = -1\nsig.AB = rho.AB*sig.A*sig.B\nmu.p.m1 = x.A*mu.A + x.B*mu.B\nsig2.p.m1 = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p.m1 = sqrt(sig2.p.m1)\n\nplot(sig.p.1, mu.p.1, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]))\npoints(sig.p.m1, mu.p.m1, type=\"b\", col=\"blue\", pch=22, cex = cex.val)\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\nlegend(x=\"topleft\", legend=c(expression(rho==1), expression(rho==-1)),\n       col=c(\"black\", \"blue\"), pch=c(16,22), cex = cex.val)\n```\n\n## Efficient Portfolios\n\n```{r, echo=FALSE}\nrho.AB = -0.164\nsig.AB = rho.AB*sig.A*sig.B\nx.A = seq(from=-0.4, to=1.4, by=0.1)\nx.B = 1 - x.A\nmu.p = x.A*mu.A + x.B*mu.B\nsig2.p = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p = sqrt(sig2.p)\nplot(sig.p, mu.p, type=\"b\", pch=16, ylim=c(0, max(mu.p)), cex = cex.val,\n     xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     col=c(rep(\"red\", 6), rep(\"green\", 13)))\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\nsegments(x0=sig.p[3], y0=0, x1=sig.p[3], y1=mu.p[11], \n         lwd=3, lty=\"dotted\")\ntext(x=sig.p[3], y=mu.p[3], labels=\"Inefficient portfolio\", \n     pos=4, cex = cex.val)\ntext(x=sig.p[3], y=mu.p[11], labels=\"Efficient portfolio\", \n     cex = cex.val, pos=4)\n```\n\n* Efficient portfolios: portfolios with highest expected return for a given volatility (green dots)\n* Minimum variance portfolio: efficient portfolio with the smallest variance\n* Inefficient portfolios (red dots) are dominated by efficient portfolios (green dots)\n\n## Computing the minimum variance portfolio\n\n```{r}\n# compute mininimum variance portfolio weights\nxA.min = (sig2.B - sig.AB)/(sig2.A + sig2.B - 2*sig.AB)\nxB.min = 1 - xA.min\nxA.min\nxB.min\n```\n\n```{r}\n# compute expected return and volatility\nmu.p.min = xA.min*mu.A + xB.min*mu.B\nsig2.p.min = xA.min^2 * sig2.A + xB.min^2 * sig2.B + 2*xA.min*xB.min*sig.AB\nsig.p.min = sqrt(sig2.p.min)\nmu.p.min\nsig.p.min\n```\n\n## Minimum variance portfolko\n\n```{r, echo=FALSE}\nx.A = seq(from=-0.4, to=1.4, by=0.1)\nx.B = 1 - x.A\nmu.p = x.A*mu.A + x.B*mu.B\nsig2.p = x.A^2 * sig2.A + x.B^2 * sig2.B + 2*x.A*x.B*sig.AB\nsig.p = sqrt(sig2.p)\n\n# minimum variance portfolio\nxA.min = (sig2.B - sig.AB)/(sig2.A + sig2.B - 2*sig.AB)\nxB.min = 1 - xA.min\nmu.p.min = xA.min*mu.A + xB.min*mu.B\nsig2.p.min = xA.min^2 * sig2.A + xB.min^2 * sig2.B + 2*xA.min*xB.min*sig.AB\nsig.p.min = sqrt(sig2.p.min)\n\n# create portfolio plot\ncex.val = 2\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]), cex.lab=cex.val,\n     col=c(rep(\"red\", 6), \"blue\", rep(\"green\", 12)))\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\ntext(x=sig.p.min, y=mu.p.min, labels=\"Global min\", pos=2, cex = cex.val)\n\n```\n\n## Portfoliols of T-Bills and 1 risky asset\n\n```{r}\n# Risk-free rate\nr.f = 0.03\n# T-bills + asset A\nx.A = seq(from=0, to=1.4, by=0.1)\nmu.p.A = r.f + x.A*(mu.A - r.f)\nsig.p.A = x.A*sig.A\nsharpe.A = (mu.A - r.f)/sig.A\nsharpe.A\n```\n\n```{r}\n# T-bills + asset B\nx.B = seq(from=0, to=1.4, by=0.1)\nmu.p.B = r.f + x.B*(mu.B - r.f)\nsig.p.B = x.B*sig.B\nsharpe.B = (mu.B - r.f)/sig.B\nsharpe.B\n```\n\n## Portfoliols of T-Bills and 1 risky asset\n\n```{r, echo=FALSE}\nplot(sig.p.A, mu.p.A, type=\"b\", col=\"green\", ylim=c(0, max(mu.p.A)),\n     xlim=c(0, max(sig.p.A, sig.p.B)), pch=16, cex = cex.val,\n     xlab=expression(sigma[p]), ylab=expression(mu[p]), cex.lab = cex.val)\npoints(sig.p.B, mu.p.B, type=\"b\", col=\"red\", pch=16, cex = cex.val)\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=1, cex = cex.val)\ntext(x=0, y=r.f, labels=expression(r[f]), pos=2, cex = cex.val)\n```\n\n* Portfolios of T-Bills and asset A are efficient relative to portfolios of T-Bills and asset B\n\n## Portfolios of T-Bills and 2 risky assets\n\n```{r, echo=FALSE}\nrho.AB = -0.164\nsig.AB = rho.AB*sig.A*sig.B\ntop = (mu.A - r.f)*sig2.B - (mu.B - r.f)*sig.AB\nbot = (mu.A - r.f)*sig2.B + (mu.B - r.f)*sig2.A - (mu.A - r.f + mu.B - r.f)*sig.AB\nx.A.tan = top/bot\nx.B.tan = 1 - x.A.tan\nmu.p.tan = x.A.tan*mu.A + x.B.tan*mu.B\nsig2.p.tan = x.A.tan^2 * sig2.A + x.B.tan^2 * sig2.B + 2*x.A.tan*x.B.tan*sig.AB\nsig.p.tan = sqrt(sig2.p.tan)\n\n# T-bills plus tangency\nx.tan = seq(from=0, to=2.4, by=0.1)\nmu.p.tan.tbill = r.f + x.tan*(mu.p.tan - r.f)\nsig.p.tan.tbill = x.tan*sig.p.tan\n\n# plot portfolios w/o tangency portfolio\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]), cex.lab = cex.val)\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\ntext(x=sig.p.min, y=mu.p.min, labels=\"Global min\", pos=4, cex = cex.val)\ntext(x=0, y=r.f, labels=expression(r[f]), pos=2, cex = cex.val)\n# text(x=sig.p.tan, y=mu.p.tan, labels=\"Tangency\", pos=2, cex = cex.val)\npoints(sig.p.A, mu.p.A, type=\"b\", col=\"red\", pch=16, cex = cex.val)\npoints(sig.p.B, mu.p.B, type=\"b\", col=\"blue\", pch=16, cex = cex.val)\n\n```\n\nQ: Can you find the portfolio of assets A and B that has the highest Sharpe slope?\n\n## Portfolios of T-Bills and 2 risky assets\n\n```{r, echo=FALSE}\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]), cex.lab = cex.val)\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\ntext(x=sig.p.min, y=mu.p.min, labels=\"Global min\", pos=4, cex = cex.val)\ntext(x=0, y=r.f, labels=expression(r[f]), pos=2, cex = cex.val)\ntext(x=sig.p.tan, y=mu.p.tan, labels=\"Tangency\", pos=2, cex = cex.val)\npoints(sig.p.A, mu.p.A, type=\"b\", col=\"red\", pch=16, cex = cex.val)\npoints(sig.p.B, mu.p.B, type=\"b\", col=\"blue\", pch=16, cex = cex.val)\npoints(sig.p.tan.tbill, mu.p.tan.tbill, type=\"b\", col=\"green\", pch=16, cex = cex.val)\n\n```\n\n* The portfolio of assets A and B with the highest Sharpe slope is the tangency portfolio\n\n## Efficient portfolios and risk preferences\n\n```{r, echo=FALSE}\nmu.safe = r.f + 0.10*(mu.p.tan - r.f)\nsig.safe = 0.10*sig.p.tan\n# risky portfolio: 110% in tangency and -10% in T-bills\nmu.risky = r.f + 2*(mu.p.tan - r.f)\nsig.risky = 2*sig.p.tan\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)), cex.lab = cex.val,\n     xlab=expression(sigma[p]), ylab=expression(mu[p]))\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\ntext(x=sig.p.min, y=mu.p.min, labels=\"Global min\", pos=4, cex = cex.val)\ntext(x=0, y=r.f, labels=expression(r[f]), pos=2, cex = cex.val)\ntext(x=sig.p.tan, y=mu.p.tan, labels=\"Tangency\", pos=2, cex = cex.val)\npoints(x=sig.p.tan, y=mu.p.tan, pch=16, cex=2, col=\"green\")\npoints(sig.p.tan.tbill, mu.p.tan.tbill, type=\"b\", col=\"green\", \n       pch=16, cex = cex.val)\npoints(x=sig.safe, y=mu.safe, pch=16, cex=2)\ntext(x=sig.safe, y=mu.safe, labels=\"Safe\", pos=3, cex = cex.val)\npoints(x=sig.risky, y=mu.risky, pch=16, cex=2)\ntext(x=sig.risky, y=mu.risky, labels=\"Risky\", pos=3, cex = cex.val)\n```\n\n* The point labeled \"Safe\" has 90% T-Bills and 10% tangency portfolio\n* The point labeled \"Risky\" has -100% T-Bills (leverage) amd 200% tangency\n\n## Interpreting efficient portfolios\n\n```{r, echo=FALSE}\nx.t1 = sig.B/sig.p.tan\nmu.p1.e = r.f + x.t1*(mu.p.tan - r.f)\nsig.p1.e = x.t1*sig.p.tan\n\n# find combination of T-bills and tangency that has same ER as asset B\nx.t2 = (mu.B - r.f)/(mu.p.tan - r.f)\nmu.p2.e = r.f + x.t2*(mu.p.tan - r.f)\nsig.p2.e = x.t2*sig.p.tan\n\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]))\ntext(x=sig.A, y=mu.A, labels=\"Asset A\", pos=4, cex = cex.val)\ntext(x=sig.B, y=mu.B, labels=\"Asset B\", pos=4, cex = cex.val)\ntext(x=sig.p.min, y=mu.p.min, labels=\"Global min\", pos=4, cex = cex.val)\ntext(x=0, y=r.f, labels=expression(r[f]), pos=2, cex = cex.val)\ntext(x=sig.p.tan, y=mu.p.tan, labels=\"Tangency\", pos=4, cex = cex.val)\npoints(x=sig.p.tan, y=mu.p.tan, pch=16, col=\"green\", cex = cex.val)\npoints(sig.p.tan.tbill, mu.p.tan.tbill, type=\"b\", col=\"green\", pch=16, cex = cex.val)\nsegments(x0=sig.B, y0=0, x1=sig.B, y1=mu.p1.e, lwd=3, lty=\"dotted\")\nsegments(x0=sig.B, y0=mu.p1.e, x1=0, y1=mu.p1.e, lwd=3, lty=\"dotted\")\nsegments(x0=sig.p2.e, y0=0, x1=sig.p2.e, y1=mu.p2.e, lwd=3, lty=\"dotted\")\nsegments(x0=0, y0=mu.p2.e, x1=sig.B, y1=mu.p2.e, lwd=3, lty=\"dotted\")\ntext(x=sig.B, y=mu.p1.e, labels=\"e1\", pos=3, cex = cex.val)\ntext(x=sig.p2.e, y=mu.B, labels=\"e2\", pos=3, cex = cex.val)\n\n```\n\n* e1: Efficient portfolio with the same volatility as asset B: $x_{t}=$ `r x.t1`, $x_{f}=$ `r 1-x.t1`\n* e2: Efficient portfolio with the same mean as asset B: $x_{t}=$ `r x.t2`, $x_{f}=$ `r 1-x.t2`\n\n## Real world example: stock - bond portfolio\n\nGet Vanguard mutual fund data from **IntroCompFinR**\n\n```{r}\ndata(VanguardPrices)\nVanguardPrices = as.xts(VanguardPrices)\ncolnames(VanguardPrices)\nrange(index(VanguardPrices))\nvfinfPrices = VanguardPrices[, \"vfinx\", drop=FALSE]\nvbltxPices = VanguardPrices[, \"vbltx\", drop=FALSE]\nvfinxRetS = na.omit(Return.calculate(vfinfPrices, method=\"simple\"))\nvbltxRetS = na.omit(Return.calculate(vbltxPices, method=\"simple\"))\nstockBondRetS = merge(vfinxRetS, vbltxRetS)\n```\n\n## Historical sub-periods\n\n```{r}\nsmpl1 = \"1995-1::2000-1\"\nsmpl2 = \"2000-1::2005-1\"\nsmpl3 = \"2005-1::2010-1\"\nsmpl4 = \"2010-1::2014-12\"\n# MOnthly risk-free rates for sub-periods\nr.f = c(0.05, 0.025, 0.001, 0.001)/12\n```\n\n## Historical performance over sub-periods\n\n```{r}\npar(mfrow=c(2,2))\nchart.CumReturns(stockBondRetS[smpl1], main=\"\", wealth.index = TRUE, legend.loc = \"topleft\")\nchart.CumReturns(stockBondRetS[smpl2], main=\"\", wealth.index = TRUE)\nchart.CumReturns(stockBondRetS[smpl3], main=\"\", wealth.index = TRUE)\nchart.CumReturns(stockBondRetS[smpl4], main=\"\", wealth.index = TRUE)\npar(mfrow=c(1,1))\n```\n\n# Annualized statistics using square-root-of-time rule\n\nUse Performance.Analytics function `table.AnnualizedReturns()`\n\n```{r}\ntable.AnnualizedReturns(stockBondRetS[smpl1], Rf = r.f[1], geometric = FALSE)\ntable.AnnualizedReturns(stockBondRetS[smpl2], Rf = r.f[2], geometric = FALSE)\ntable.AnnualizedReturns(stockBondRetS[smpl3], Rf = r.f[3], geometric = FALSE)\ntable.AnnualizedReturns(stockBondRetS[smpl4], Rf = r.f[4], geometric = FALSE)\n```\n\nCorrelations by sub-period\n\n```{r}\ncor(stockBondRetS[smpl1])[1,2]\ncor(stockBondRetS[smpl2])[1,2]\ncor(stockBondRetS[smpl3])[1,2]\ncor(stockBondRetS[smpl4])[1,2]\n```\n\n## plot risk return characteristics of long-only portfolios\n\n```{r}\n# create portfolios for frontier plot\npar(mfrow=c(2,2))\n\nsmplVals = c(smpl1, smpl2, smpl3, smpl4)\nfor (i in 1:length(smplVals)) {\n\nmuhat.vals = 12*apply(stockBondRetS[smplVals[i]], 2, mean)\nsigmahat.vals = sqrt(12)*apply(stockBondRetS[smplVals[i]], 2, sd)\ncovhat = 12*cov(stockBondRetS[smplVals[i]])[1,2]\ncorhat = covhat/(sigmahat.vals[1]*sigmahat.vals[2])\n\nmu.vfinx = muhat.vals[1]\nmu.vbltx = muhat.vals[2]\nsig2.vfinx = sigmahat.vals[1]^2\nsig2.vbltx = sigmahat.vals[2]^2\n#covmat.a = matrix(c(sig2.vfinx, covhat, covhat, sig2.vbltx), 2, 2)\ncovmat.a = 12*cov(stockBondRetS[smplVals[i]])\n\nx.vfinx = seq(from=0, to=1, by=0.1)\nx.vbltx = 1 - x.vfinx\nmu.p = x.vfinx*mu.vfinx + x.vbltx*mu.vbltx\nsig2.p = x.vfinx^2 * sig2.vfinx + x.vbltx^2 * sig2.vbltx + 2*x.vfinx*x.vbltx*covhat\nsig.p = sqrt(sig2.p)\n\n# plot portfolio frontier\ncex.val = 2\nif (i == 1) {\n  colvals = c(rep(\"red\", 2), rep(\"green\", 10))\n}\nif (i == 2 || i == 3) {\n  colvals = c(rep(\"green\", 3), rep(\"red\", 9))\n}\nif (i == 4) {\n  colvals = c(rep(\"red\", 3), rep(\"green\", 9))\n}\n\nplot(sig.p, mu.p, type=\"b\", pch=16, cex = cex.val,\n     ylim=c(0, 0.25), xlim=c(0, 0.20),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]), cex.lab=cex.val,\n     col=colvals)\npoints(0, 12*r.f[i], pch=16, cex = cex.val, col=\"green\")\ntext(0, 12*r.f[i], labels=expression(r[f]), pos=4, cex = cex.val)\ntext(x=sqrt(sig2.vfinx), y=mu.vfinx, labels=\"stocks\", pos=4, cex = cex.val)\ntext(x=sqrt(sig2.vbltx), y=mu.vbltx, labels=\"bonds\", pos=4, cex = cex.val)\n\n# tan\ntan.port = tangency.portfolio(muhat.vals, covmat.a, 12*r.f[i])\nSR = (tan.port$er - 12*r.f[i])/tan.port$sd\n\npoints(tan.port$sd, tan.port$er, pch=16, col=\"blue\", cex = cex.val)\ntext(tan.port$sd, tan.port$er, labels = \"Tangency\", pos = 3, cex = cex.val)\n\nabline(a=12*r.f[i], b=SR, col=\"green\", lwd=2)\n}\n\npar(mfrow=c(1,1))\n```\n\n\n## compute global minimum variance portfolio and tangency portfolio\n\n```{r}\nsmplVals = c(smpl1, smpl2, smpl3, smpl4)\nfor (i in 1:length(smplVals)) {\n\nmuhat.vals = 12*apply(stockBondRetS[smplVals[i]], 2, mean)\nsigmahat.vals = sqrt(12)*apply(stockBondRetS[smplVals[i]], 2, sd)\ncovmat.a = 12*cov(stockBondRetS[smplVals[i]])\ngmin.port = globalMin.portfolio(muhat.vals, covmat.a)\ngmin.port\ntan.port = tangency.portfolio(muhat.vals, covmat.a, 12*r.f[i])\ntan.port\n}\n```\n\n",
    "created" : 1477075192225.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "748916786",
    "id" : "200C62A8",
    "lastKnownWriteTime" : 1470440427,
    "last_content_update" : 1470440427,
    "path" : "C:/Users/ezivot/Dropbox/FinBook/R Presentations/introductionToPortfolioTheoryBook.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}